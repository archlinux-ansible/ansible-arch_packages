---

# pciutils needed to detect GPU
# pigz needed for makepkg
# rustup needed for rust toolchain
- name: Install prerequisites
  pacman:
    name:
      - pciutils
      - pigz
      - rustup
    state: present

- name: Configure rust
  command: rustup default stable
  register: rustup
  changed_when: "' unchanged ' not in rustup.stdout"
  become: yes
  become_user: aurbuilder

- name: Look for GPUs on PCIe bus
  shell: "set -o pipefail; lspci -v -s $(lspci | grep ' VGA ' | cut -d' ' -f 1)"
  register: gpus_lspci
  changed_when: no

- name: Check which GPUs are present
  set_fact:
    gpu: >-
      {{
        ('amd' if 'AMD' in gpus_lspci.stdout
        else 'intel' if 'Intel' in gpus_lspci.stdout
        else 'nvidia' if 'NVIDIA' in gpus_lspci.stdout) | default('generic')
      }}

# Check if nvidia driver already installed for idempotency
# Don't run nvidia-xconfig if drivers are already installed
# To avoid overwriting user config
- name: Get list of installed packages
  command: pacman -Qq
  changed_when: no
  register: installed_packages
  when: gpu == 'nvidia'

- name: Install GPU drivers
  pacman:
    name: "{{ lookup('vars', 'packages__gpu_' + gpu) }}"
    state: present

- name: Install Xorg
  pacman:
    name: "{{ packages__xorg }}"
    state: present

- name: Run nvidia-xconfig
  shell: "nvidia-xconfig {{ packages__nvidia_xconfig_args | default('') }}"
  changed_when: no
  when: 
    - gpu == 'nvidia'
    - packages__gpu_nvidia_driver not in installed_packages.stdout_lines

- name: Install packages
  aur:
    name: "{{ packages__pkgs }}"
    state: present
    # Hangs importing GPG keys, if this is not specified
    use: yay
    extra_args: --mflags --skipinteg
  become: yes
  become_user: aurbuilder

# This is horribly hacky, but --noconfirm auto-fails
- name: Install pipewire
  # yamllint disable-line rule:command-instead-of-shell
  shell: "yes | pacman -S {{ packages__pipewire | join(' ') }}"
  register: pipewire
  changed_when: "' installing' in pipewire.stdout"
